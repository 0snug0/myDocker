upstream backend {
  zone backend 64k;
  hash $request_uri consistent;
  server 127.0.0.1:8006;
  # server 127.0.0.1:8000;
  # server 127.0.0.1:8001;
  # server 127.0.0.1:8002;
  # server 127.0.0.1:8003;
}

match pingok {
    # Used for /?ping health check
    status 200;
    header Content-Type = text/html;
    body ~ "ok";
} 

### Server block to be proxied to. Can be removed if modify upstream wafdemo
# server{
#   listen 8000;
#   location / {
#     return 200 8000;
#     add_header content-type text/html;
#     root   /usr/share/nginx/html;
#     index  index.html index.htm;
#     error_log /var/log/nginx/error.log info;
#     expires 1y;
#   }
# }

server{
  listen 8001;
  location / {
    return 200 8001;
    add_header content-type text/html;
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    error_log /var/log/nginx/error.log info;
    expires 1y;
  }
}

server{
  listen 8002;
  location / {
    return 200 8002;
    add_header content-type text/html;
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    error_log /var/log/nginx/error.log info;
    expires 1y;
  }
}

server{
  listen 8003;
  location / {
    add_header content-type text/html;
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    error_log /var/log/nginx/error.log info;
    expires 1y;

    if ($args ~ ping){
      return 200 ok;
    }

    return 200 8003;
  }
}

server {
  listen 80;

  ignore_invalid_headers off;
  underscores_in_headers on;

  location / {
    proxy_pass http://backend;
    proxy_set_header Host $host;
  }

  location @ping {
    internal;
    proxy_pass http://backend;
    health_check uri=/?ping match=pingok;
    proxy_set_header x-emc-namespace lsc;
  }
}

## NGINX Plus Dashboard

server {
  listen 8080;
  root /usr/share/nginx/html;

  location = / {
    return 301 /status.html;
  }

  location = /status.html { }

  location /status {
    status;
  }

  location /upstream_conf {
    upstream_conf;
  }
}